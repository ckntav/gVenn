% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_overlaps.R
\name{compute_overlaps}
\alias{compute_overlaps}
\title{Dispatch overlap computation based on input type}
\usage{
compute_overlaps(x)
}
\arguments{
\item{x}{A \code{GRangesList}, a named list of \code{GRanges}, or a named
list of atomic vectors (e.g., gene symbols). All elements must be of the
same kind.}
}
\value{
The object returned by the chosen backend:
\itemize{
\item \code{GenomicOverlapResult} from \code{compute_genomic_overlaps()}
\item \code{SetOverlapResult} from \code{compute_set_overlaps()}
}
}
\description{
Wrapper that inspects the input and calls either
\code{\link{compute_genomic_overlaps}} (for GRanges/GRangesList)
or \code{\link{compute_set_overlaps}} (for atomic vectors).
}
\examples{
# Sets
sets <- list(A = letters[1:4], B = letters[3:6])
ov1 <- compute_overlaps(sets)

# Genomic
if (requireNamespace("GenomicRanges", quietly = TRUE)) {
    gr1 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(1, 50), width = 20))
    gr2 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(15, 90), width = 20))
    ov2 <- compute_overlaps(list(A = gr1, B = gr2))
}

}
\seealso{
\code{\link[GenomicRanges]{GRangesList}},
\code{\link[GenomicRanges]{reduce}},
\code{\link[IRanges]{overlapsAny}},
\code{\link{plotVenn}},
\code{\link{plotUpset}}
}
