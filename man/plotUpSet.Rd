% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotUpSet.R
\name{plotUpSet}
\alias{plotUpSet}
\title{Plot an UpSet Diagram from Genomic or Set Overlap Results}
\usage{
plotUpSet(overlap_object)
}
\arguments{
\item{overlap_object}{A \code{GenomicOverlapsResult} or \code{SetOverlapsResult} object returned by
\code{\link{computeOverlaps}}.}
}
\value{
An UpSet plot object generated by \code{ComplexHeatmap::UpSet}.
}
\description{
This function creates an UpSet plot using the \code{ComplexHeatmap} package to visualize
intersections across multiple sets. Supports both \code{GenomicOverlapsResult} and \code{SetOverlapsResult} objects.
}
\examples{
# Example with SetOverlapsResult
gene_sets <- list(
  TF1 = c("TP53", "BRCA1", "MYC", "GATA3", "FOXA1"),
  TF2 = c("MYC", "ESR1", "GATA3", "FOXA1", "AR"),
  TF3 = c("TP53", "GATA3", "AR", "NANOG", "SOX2")
)
res_sets <- computeOverlaps(gene_sets)
plotUpSet(res_sets)

# Example with GenomicOverlapsResult
gr1 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(100, 500, 900), width = 100))
gr2 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(150, 520, 1000), width = 100))
gr3 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(300, 550, 1100), width = 100))
peak_sets <- list(H3K27ac = gr1, MED1 = gr2, BRD4 = gr3)
res_genomic <- computeOverlaps(peak_sets)
plotUpSet(res_genomic)
}
