% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractOverlaps.R
\name{extractOverlaps}
\alias{extractOverlaps}
\title{Extract Overlap Groups from Genomic or Set Overlap Results}
\usage{
extractOverlaps(overlap_object)
}
\arguments{
\item{overlap_object}{A \code{GenomicOverlapsResult} or \code{SetOverlapsResult} object.}
}
\value{
A named list of grouped intersecting elements:
\itemize{
\item If input is a \code{GenomicOverlapsResult}, a \code{GRangesList} split by \code{intersect_category}.
\item If input is a \code{SetOverlapsResult}, a named \code{list} of character vectors grouped by \code{intersect_category}.
}
}
\description{
This function extracts subsets of intersecting elements grouped by their overlap category (e.g., "110").
For genomic overlaps, it returns a \code{GRangesList}; for set overlaps, it returns a named list of character vectors.
}
\examples{
# For GenomicOverlapsResult
gr1 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(100, 500), width = 100))
gr2 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(150, 700), width = 100))
gr3 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(900), width = 100))
peak_sets <- list(H3K27ac = gr1, MED1 = gr2, BRD4 = gr3)
res1 <- computeOverlaps(peak_sets)
extractOverlaps(res1)

# For SetOverlapsResult
gene_sets <- list(
  TF1 = c("TP53", "BRCA1", "MYC", "GATA3", "FOXA1"),
  TF2 = c("MYC", "ESR1", "GATA3", "FOXA1", "AR"),
  TF3 = c("TP53", "GATA3", "AR", "NANOG", "SOX2")
)
res2 <- computeOverlaps(gene_sets)
extractOverlaps(res2)
}
