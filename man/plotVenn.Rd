% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotVenn.R
\name{plotVenn}
\alias{plotVenn}
\title{Plot a Venn Diagram from Genomic or Set Overlap Results}
\usage{
plotVenn(
  overlap_object,
  labels = FALSE,
  legend = "right",
  fill = c("#2B70AB", "#FFB027", "#3EA742", "#CD3301", "#9370DB"),
  ...
)
}
\arguments{
\item{overlap_object}{A \code{GenomicOverlapsResult} or \code{SetOverlapsResult} object returned by
\code{\link{compute_genomic_overlaps}} or \code{\link{compute_set_overlaps}}.}

\item{labels}{Logical. Whether to show set labels on the diagram. Default is \code{FALSE}.}

\item{legend}{Position of the legend ("right", "top", "bottom", etc.) or \code{FALSE} to disable.}

\item{fill}{A character vector of fill colors for the sets.}

\item{...}{Additional arguments passed to \code{\link[eulerr]{plot.euler}}.}
}
\value{
A Venn diagram plot generated by \code{eulerr}.
}
\description{
This function creates a Venn diagram using the \code{eulerr} package to visualize intersections
across multiple sets (up to ~5). Supports both \code{GenomicOverlapsResult} and \code{SetOverlapsResult} objects.
}
\examples{
# Example with SetOverlapResult
gene_sets <- list(
  TF1 = c("TP53", "BRCA1", "MYC", "GATA3", "FOXA1"),
  TF2 = c("MYC", "ESR1", "GATA3", "FOXA1", "AR"),
  TF3 = c("TP53", "GATA3", "AR", "NANOG", "SOX2")
)
res_sets <- computeOverlaps(gene_sets)
plotVenn(res_sets)

# Example with GenomicOverlapsResult
gr1 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(100, 500, 900), width = 100))
gr2 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(150, 520, 1000), width = 100))
gr3 <- GenomicRanges::GRanges("chr1", IRanges::IRanges(c(300, 550, 1100), width = 100))
peak_sets <- list(H3K27ac = gr1, MED1 = gr2, BRD4 = gr3)
res_genomic <- computeOverlaps(peak_sets)
plotVenn(res_genomic)
}
